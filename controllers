const {fetchTopics, fetchEndpoints, selectArticleById, selectArticles, selectCommentsByArticleId, addComment, updateArticleVotes}= require("./models")
const db = require('./db/connection')

function getTopics(req, res, next){

    fetchTopics().then((topics) => {
        
        res.status(200).send({topics})
    })

    .catch((err) =>{
        next(err);
    })
}

function getEndpoints(req, res, next){
    fetchEndpoints().then((endpoints) => {
        res.status(200).send(endpoints)
    })
    .catch((err) => {
        next (err)
    })
}

function getArticleById (req, res, next) {
    const { article_id } = req.params;
    selectArticleById(article_id).then((article) => {
      res.status(200).send({ article });
    })
    .catch((err) => {
      next(err);
    })
  };

function getArticles (req, res, next) {
    selectArticles().then((articles) => {
        res.status(200).send({articles})
    })
    .catch((err) =>{
        next(err);
    })
  }
 function getCommentsByArticleId (req, res, next) {
    const { article_id } = req.params;
  
    selectCommentsByArticleId(article_id)
      .then((comments) => {
        res.status(200).send({ comments });
      })
      .catch((err) => {
        next(err);
      });
  };

  function postComments (req, res, next) {
    const article_id   = req.params.article_id;
    const newComment  = req.body;
  
    addComment(article_id, newComment)
      .then((comment) => {
        res.status(201).send({ comment: newComment });
      })
      .catch((err) => {
        next(err);
      });
  };

  function patchArticleVotes(req, res, next) {
    const  article_id  = req.params.article_id;
    const newVote = req.body;
  
    updateArticleVotes(article_id, newVote)
      .then((updatedArticle) => {
        if(updatedArticle.votes<0){

        }
        res.status(200).send({ article: updatedArticle });
      })
      .catch((err) => {
        console.log(err)
        next(err);
      });
  }
 
module.exports = {getTopics, getEndpoints, getArticleById, getArticles, getCommentsByArticleId, postComments, patchArticleVotes}